{"remainingRequest":"E:\\code\\github\\my-web-project\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!E:\\code\\github\\my-web-project\\frontend\\src\\views\\Articles.vue?vue&type=style&index=0&id=1d7dfdf7&scoped=true&lang=css","dependencies":[{"path":"E:\\code\\github\\my-web-project\\frontend\\src\\views\\Articles.vue","mtime":1734507290008},{"path":"E:\\code\\github\\my-web-project\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1734507586011},{"path":"E:\\code\\github\\my-web-project\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1734507585856},{"path":"E:\\code\\github\\my-web-project\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1734507585887},{"path":"E:\\code\\github\\my-web-project\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1734507586011},{"path":"E:\\code\\github\\my-web-project\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1734507585852}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hcnRpY2xlcyB7CiAgcGFkZGluZzogMjBweDsKfQo="},{"version":3,"sources":["E:\\code\\github\\my-web-project\\frontend\\src\\views\\Articles.vue"],"names":[],"mappings":";AA+CA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACf","file":"E:/code/github/my-web-project/frontend/src/views/Articles.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"articles\">\n    <h1>Articles</h1>\n    <div v-if=\"loading\">Loading articles...</div>\n    <div v-else>\n      <ul>\n        <li v-for=\"article in articles\" :key=\"article.id\">\n          <router-link :to=\"{ name: 'ArticleDetail', params: { id: article.id } }\">\n            {{ article.title }}\n          </router-link>\n        </li>\n      </ul>\n      <button @click=\"fetchArticles\">Refresh Articles</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      articles: [],\n      loading: true,\n    };\n  },\n  methods: {\n    async fetchArticles() {\n      this.loading = true;\n      try {\n        const response = await axios.get('/api/articles');\n        this.articles = response.data;\n      } catch (error) {\n        console.error('Error fetching articles:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n  },\n  created() {\n    this.fetchArticles();\n  },\n};\n</script>\n\n<style scoped>\n.articles {\n  padding: 20px;\n}\n</style>"]}]}